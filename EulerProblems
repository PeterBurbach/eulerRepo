# PROBLEM 1
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23
# Find the sum of all the multiples of 3 or 5 below 1000.

sum = 0 # create variable for the sum of all of the numbers
for integer in range(1000): # for loop which will cycle through every number UNDER 1000
    if (integer%3 == 0 or integer%5 == 0): # if number is divisible by 3 or 5
        sum += integer # add number to total sum
print(sum)

# COMPLETE


# PROBLEM 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

evens_sum = 2 # set even sum to the already existing sum for evens just 2
number_list = [1,2] # create a list of numbers, starting with the two already existing
term_limit = True # declare term limit as true
while term_limit: 
        term = number_list[-1] + number_list[-2] # add together the last two values in the number_list
        if term <= 4000000: # if the term is less than or equal to the set value (4,000,000)
            if term%2 == 0: # if the term is even
                evens_sum += term # add the term to the sum of evens
            number_list.append(term) # append the term to the end of number_list
        else:
                term_limit = False # set term_limit to false once term limit is reached (stops while loop)
print('evens total: ', evens_sum)

# COMPLETE